local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\184\66","\17\150\108\112\143\136"),function(v43)if (v9(v43,2)==79) then local v89=0;while true do if (0==v89) then v31=v8(v11(v43,1,1));return "";end end else local v90=0;local v91;while true do if (v90==0) then v91=v10(v8(v43,16));if v31 then local v123=0;local v124;while true do if (0==v123) then v124=v13(v91,v31);v31=nil;v123=1;end if (v123==1) then return v124;end end else return v91;end break;end end end end);v29=1;end if (v29==2) then function v33()local v44=0;local v45;while true do if (v44==1) then return v45;end if (v44==0) then v45=v9(v27,v30,v30);v30=v30 + 1 ;v44=1;end end end v34=nil;function v34()local v46=0;local v47;local v48;while true do if (v46==0) then v47,v48=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v46=1;end if (v46==1) then return (v48 * 256) + v47 ;end end end v29=3;end if (v29==1) then v32=nil;function v32(v49,v50,v51)if v51 then local v92=0;local v93;while true do if (v92==0) then v93=(v49/(2^(v50-1)))%(2^(((v51-1) -(v50-1)) + 1)) ;return v93-(v93%(2 -1)) ;end end else local v94=0;local v95;while true do if (v94==0) then v95=2^(v50-1) ;return (((v49%(v95 + v95))>=v95) and 1) or (0 + 0) ;end end end end v33=nil;v29=2;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==3) then v35=nil;function v35()local v52,v53,v54,v55=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end v36=nil;v29=4;end if (v29==6) then v40=nil;function v40()local v56={};local v57={};local v58={};local v59={v56,v57,nil,v58};local v60=v35();local v61={};for v81=1,v60 do local v82=0;local v83;local v84;while true do if (v82==0) then v83=v33();v84=nil;v82=1;end if (v82==1) then if (v83==1) then v84=v33()~=0 ;elseif (v83==(1 + 1)) then v84=v36();elseif (v83==3) then v84=v37();end v61[v81]=v84;break;end end end v59[4 -1 ]=v33();for v85=1,v35() do local v86=v33();if (v32(v86,1,439 -(145 + 293) )==0) then local v96=0;local v97;local v98;local v99;while true do if (v96==1) then v99={v34(),v34(),nil,nil};if (v97==0) then local v130=0;while true do if (v130==0) then v99[1489 -(998 + 488) ]=v34();v99[4]=v34();break;end end elseif (v97==1) then v99[3]=v35();elseif (v97==(1 + 1)) then v99[3]=v35() -(2^16) ;elseif (v97==3) then local v143=0;while true do if (v143==0) then v99[3]=v35() -(2^(947 -(857 + 74))) ;v99[4]=v34();break;end end end v96=2;end if (v96==3) then if (v32(v98,3,3)==1) then v99[2 + 2 ]=v61[v99[4]];end v56[v85]=v99;break;end if (v96==0) then v97=v32(v86,2,3);v98=v32(v86,4,6);v96=1;end if (v96==2) then if (v32(v98,1,1)==1) then v99[2]=v61[v99[2 + 0 ]];end if (v32(v98,570 -(367 + 201) ,774 -(201 + 571) )==1) then v99[930 -(214 + 713) ]=v61[v99[3]];end v96=3;end end end end for v87=1 + 0 ,v35() do v57[v87-(878 -(282 + 595)) ]=v40();end return v59;end v41=nil;v29=7;end if (v29==4) then function v36()local v63=0;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v63==1) then v66=1 -0 ;v67=(v32(v65,1,20) * ((5 -3)^32)) + v64 ;v63=2;end if (3==v63) then if (v68==0) then if (v67==0) then return v69 * 0 ;else local v125=0;while true do if (v125==0) then v68=1;v66=0;break;end end end elseif (v68==2047) then return ((v67==0) and (v69 * (1/0))) or (v69 * NaN) ;end return v16(v69,v68-1023 ) * (v66 + (v67/(2^(99 -47)))) ;end if (v63==0) then v64=v35();v65=v35();v63=1;end if (v63==2) then v68=v32(v65,21,31 + 0 );v69=((v32(v65,823 -(368 + 423) )==(3 -2)) and  -1) or (19 -(10 + 8)) ;v63=3;end end end v37=nil;function v37(v70)local v71=0;local v72;local v73;while true do if (v71==1) then v72=v11(v27,v30,(v30 + v70) -1 );v30=v30 + v70 ;v71=2;end if (v71==0) then v72=nil;if  not v70 then v70=v35();if (v70==0) then return "";end end v71=1;end if (v71==3) then return v14(v73);end if (v71==2) then v73={};for v104=1, #v72 do v73[v104]=v10(v9(v11(v72,v104,v104)));end v71=3;end end end v29=5;end if (v29==7) then function v41(v74,v75,v76)local v77=0;local v78;local v79;local v80;while true do if (v77==0) then v78=v74[1139 -(116 + 1022) ];v79=v74[2];v77=1;end if (v77==1) then v80=v74[3];return function(...)local v106=v78;local v107=v79;local v108=v80;local v109=v39;local v110=1;local v111= -(1638 -(1523 + 114));local v112={};local v113={...};local v114=v20("#",...) -1 ;local v115={};local v116={};for v120=0,v114 do if (v120>=v108) then v112[v120-v108 ]=v113[v120 + 1 ];else v116[v120]=v113[v120 + 1 ];end end local v117=(v114-v108) + 1 ;local v118;local v119;while true do local v121=0;while true do if (0==v121) then v118=v106[v110];v119=v118[1];v121=1;end if (1==v121) then if (v119<=38) then if (v119<=18) then if (v119<=(33 -25)) then if (v119<=(3 -0)) then if (v119<=1) then if (v119==0) then local v146=0;local v147;local v148;local v149;while true do if (v146==0) then v147=v107[v118[2 + 1 ]];v148=nil;v146=1;end if (v146==2) then for v329=1,v118[14 -10 ] do local v330=0;local v331;while true do if (v330==0) then v110=v110 + (3 -2) ;v331=v106[v110];v330=1;end if (v330==1) then if (v331[1]==23) then v149[v329-1 ]={v116,v331[3]};else v149[v329-1 ]={v75,v331[3]};end v115[ #v115 + 1 ]=v149;break;end end end v116[v118[2]]=v41(v147,v148,v76);break;end if (v146==1) then v149={};v148=v18({},{[v7("\18\64\238\137\173\163\53","\198\77\31\135\231\201")]=function(v332,v333)local v334=0;local v335;while true do if (v334==0) then v335=v149[v333];return v335[1][v335[1067 -(68 + 997) ]];end end end,[v7("\152\105\179\225\30\174\88\185\225\17","\105\199\54\221\132")]=function(v336,v337,v338)local v339=v149[v337];v339[1][v339[2]]=v338;end});v146=2;end end else do return v116[v118[2]]();end end elseif (v119==2) then local v150=0;local v151;local v152;local v153;local v154;while true do if (v150==1) then v111=(v153 + v151) -1 ;v154=1270 -(226 + 1044) ;v150=2;end if (0==v150) then v151=v118[2];v152,v153=v109(v116[v151](v116[v151 + 1 ]));v150=1;end if (v150==2) then for v341=v151,v111 do local v342=0;while true do if (v342==0) then v154=v154 + (860 -(814 + 45)) ;v116[v341]=v152[v154];break;end end end break;end end else local v155=0;local v156;while true do if (v155==0) then v156=v118[2];do return v21(v116,v156,v111);end break;end end end elseif (v119<=5) then if (v119>(17 -13)) then if  not v116[v118[2]] then v110=v110 + 1 ;else v110=v118[3];end else local v157=0;local v158;local v159;local v160;while true do if (v157==0) then v158=v118[2];v159=v116[v158 + 2 ];v157=1;end if (v157==1) then v160=v116[v158] + v159 ;v116[v158]=v160;v157=2;end if (v157==2) then if (v159>0) then if (v160<=v116[v158 + 1 ]) then local v397=0;while true do if (v397==0) then v110=v118[120 -(32 + 85) ];v116[v158 + (7 -4) ]=v160;break;end end end elseif (v160>=v116[v158 + 1 ]) then local v398=0;while true do if (v398==0) then v110=v118[3 + 0 ];v116[v158 + 3 ]=v160;break;end end end break;end end end elseif (v119<=6) then v116[v118[1 + 1 ]]=v116[v118[3]]%v116[v118[4]] ;elseif (v119>7) then v116[v118[2]]=v75[v118[3]];else v110=v118[3];end elseif (v119<=(5 + 8)) then if (v119<=10) then if (v119>9) then local v162=0;local v163;local v164;while true do if (0==v162) then v163=v118[2];v164=v116[v118[960 -(892 + 65) ]];v162=1;end if (v162==1) then v116[v163 + 1 ]=v164;v116[v163]=v164[v118[4]];break;end end else local v165=0;local v166;while true do if (v165==0) then v166=v118[2];do return v21(v116,v166,v111);end break;end end end elseif (v119<=11) then do return;end elseif (v119>12) then if (v118[2]==v116[v118[4]]) then v110=v110 + 1 ;else v110=v118[3];end else v116[v118[887 -(261 + 624) ]]=v118[7 -4 ] + v116[v118[4]] ;end elseif (v119<=15) then if (v119>14) then v116[v118[2]]();else v110=v118[3];end elseif (v119<=(28 -12)) then v116[v118[2]][v118[3]]=v116[v118[4]];elseif (v119==17) then local v250=0;local v251;local v252;while true do if (v250==1) then for v388=v251 + 1 ,v111 do v15(v252,v116[v388]);end break;end if (v250==0) then v251=v118[2];v252=v116[v251];v250=1;end end else v116[v118[2]][v116[v118[3]]]=v116[v118[1084 -(1020 + 60) ]];end elseif (v119<=28) then if (v119<=23) then if (v119<=20) then if (v119==19) then v116[v118[1425 -(630 + 793) ]]=v116[v118[3]][v118[4]];else v116[v118[2]]=v116[v118[3]]%v118[4] ;end elseif (v119<=21) then local v173=v118[2];v116[v173](v21(v116,v173 + 1 ,v111));elseif (v119==22) then local v255=0;local v256;while true do if (v255==0) then v256=v118[2];do return v116[v256](v21(v116,v256 + 1 ,v118[3]));end break;end end else v116[v118[2]]=v116[v118[3]];end elseif (v119<=(84 -59)) then if (v119>24) then v116[v118[2]][v116[v118[3]]]=v118[4];else local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==2) then for v344=v177,v111 do local v345=0;while true do if (v345==0) then v180=v180 + 1 ;v116[v344]=v178[v180];break;end end end break;end if (v176==1) then v111=(v179 + v177) -1 ;v180=0;v176=2;end if (v176==0) then v177=v118[2];v178,v179=v109(v116[v177](v21(v116,v177 + 1 ,v118[3])));v176=1;end end end elseif (v119<=26) then local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==0) then v182=v118[2];v183,v184=v109(v116[v182](v116[v182 + 1 ]));v181=1;end if (v181==1) then v111=(v184 + v182) -1 ;v185=0;v181=2;end if (v181==2) then for v346=v182,v111 do local v347=0;while true do if (v347==0) then v185=v185 + 1 ;v116[v346]=v183[v185];break;end end end break;end end elseif (v119==(49 -22)) then v116[v118[2]]=v75[v118[3]];else local v261=0;local v262;while true do if (v261==0) then v262=v118[2];v116[v262]=v116[v262]();break;end end end elseif (v119<=33) then if (v119<=30) then if (v119>29) then local v186=0;local v187;while true do if (v186==0) then v187=v118[2];v116[v187](v116[v187 + 1 ]);break;end end else local v188=v118[2];v116[v188](v21(v116,v188 + 1 ,v118[3]));end elseif (v119<=31) then v116[v118[2]]=v116[v118[3]];elseif (v119==32) then local v263=0;local v264;local v265;while true do if (v263==1) then for v389=v264 + 1 + 0 ,v111 do v15(v265,v116[v389]);end break;end if (v263==0) then v264=v118[9 -7 ];v265=v116[v264];v263=1;end end elseif (v118[2]==v116[v118[4]]) then v110=v110 + 1 ;else v110=v118[3];end elseif (v119<=35) then if (v119==34) then if (v116[v118[2]]==v118[4]) then v110=v110 + 1 ;else v110=v118[3];end else local v191=0;local v192;while true do if (0==v191) then v192=v118[2];v116[v192]=v116[v192](v21(v116,v192 + 1 ,v111));break;end end end elseif (v119<=36) then local v193=0;local v194;local v195;local v196;while true do if (v193==1) then v196=v116[v194] + v195 ;v116[v194]=v196;v193=2;end if (v193==0) then v194=v118[2];v195=v116[v194 + (6 -4) ];v193=1;end if (v193==2) then if (v195>0) then if (v196<=v116[v194 + (1 -0) ]) then local v403=0;while true do if (0==v403) then v110=v118[3];v116[v194 + (353 -(87 + 263)) ]=v196;break;end end end elseif (v196>=v116[v194 + 1 ]) then v110=v118[3];v116[v194 + 3 ]=v196;end break;end end elseif (v119>37) then v116[v118[2]]=v118[3];else v116[v118[2]][v116[v118[1750 -(760 + 987) ]]]=v116[v118[4]];end elseif (v119<=57) then if (v119<=(227 -(67 + 113))) then if (v119<=42) then if (v119<=(1953 -(1789 + 124))) then if (v119>39) then local v197=0;local v198;local v199;local v200;local v201;while true do if (v197==2) then for v349=v198,v111 do local v350=0;while true do if (v350==0) then v201=v201 + 1 ;v116[v349]=v199[v201];break;end end end break;end if (v197==0) then v198=v118[2];v199,v200=v109(v116[v198](v21(v116,v198 + (767 -(745 + 21)) ,v111)));v197=1;end if (v197==1) then v111=(v200 + v198) -1 ;v201=0;v197=2;end end else v116[v118[1 + 1 ]]=v118[3 + 0 ] + v116[v118[4]] ;end elseif (v119==41) then v116[v118[5 -3 ]]=v76[v118[7 -4 ]];else local v205=0;local v206;while true do if (0==v205) then v206=v118[2];do return v116[v206](v21(v116,v206 + 1 ,v118[3 + 0 ]));end break;end end end elseif (v119<=44) then if (v119==43) then v116[v118[2]]=v118[3];else local v209=v118[2];v116[v209](v21(v116,v209 + 1 ,v118[3]));end elseif (v119<=(176 -131)) then v116[v118[2]]=v116[v118[11 -8 ]] + v118[4] ;elseif (v119==46) then v116[v118[2]]=v76[v118[3]];else local v273=0;local v274;while true do if (v273==0) then v274=v118[2];v116[v274](v21(v116,v274 + 1 ,v111));break;end end end elseif (v119<=52) then if (v119<=(1 + 48)) then if (v119==48) then local v211=0;local v212;local v213;local v214;while true do if (2==v211) then for v351=1,v118[4] do local v352=0;local v353;while true do if (1==v352) then if (v353[1]==23) then v214[v351-1 ]={v116,v353[3]};else v214[v351-1 ]={v75,v353[5 -2 ]};end v115[ #v115 + 1 + 0 ]=v214;break;end if (v352==0) then v110=v110 + 1 ;v353=v106[v110];v352=1;end end end v116[v118[2]]=v41(v212,v213,v76);break;end if (v211==1) then v214={};v213=v18({},{[v7("\147\134\5\141\37\200\180","\173\204\217\108\227\65")]=function(v354,v355)local v356=0;local v357;while true do if (v356==0) then v357=v214[v355];return v357[1][v357[2]];end end end,[v7("\210\255\80\198\34\228\206\90\198\45","\85\141\160\62\163")]=function(v358,v359,v360)local v361=0;local v362;while true do if (v361==0) then v362=v214[v359];v362[2 -1 ][v362[2]]=v360;break;end end end});v211=2;end if (v211==0) then v212=v107[v118[955 -(802 + 150) ]];v213=nil;v211=1;end end elseif v116[v118[2]] then v110=v110 + 1 ;else v110=v118[3];end elseif (v119<=50) then v116[v118[2]]=v116[v118[3]][v118[4]];elseif (v119>51) then local v276=0;local v277;local v278;local v279;local v280;while true do if (0==v276) then v277=v118[2 + 0 ];v278,v279=v109(v116[v277](v21(v116,v277 + 1 ,v111)));v276=1;end if (v276==1) then v111=(v279 + v277) -1 ;v280=1055 -(87 + 968) ;v276=2;end if (v276==2) then for v390=v277,v111 do local v391=0;while true do if (v391==0) then v280=v280 + 1 ;v116[v390]=v278[v280];break;end end end break;end end else v116[v118[2]]();end elseif (v119<=54) then if (v119>53) then local v217=0;local v218;while true do if (v217==0) then v218=v118[2];v116[v218]=v116[v218](v21(v116,v218 + (998 -(915 + 82)) ,v118[3]));break;end end else v116[v118[2]]=v116[v118[3]]%v118[4] ;end elseif (v119<=55) then v116[v118[8 -6 ]]=v116[v118[3]] + v118[4] ;elseif (v119==56) then v116[v118[2]]= #v116[v118[3]];else v116[v118[2]]= #v116[v118[3]];end elseif (v119<=67) then if (v119<=62) then if (v119<=59) then if (v119==(164 -106)) then local v221=0;local v222;while true do if (v221==0) then v222=v118[2 + 0 ];v116[v222]=v116[v222]();break;end end elseif  not v116[v118[4 -2 ]] then v110=v110 + 1 ;else v110=v118[3];end elseif (v119<=60) then local v223=0;local v224;local v225;local v226;while true do if (v223==1) then v226=v116[v224 + 2 ];if (v226>0) then if (v225>v116[v224 + 1 ]) then v110=v118[3];else v116[v224 + (1416 -(447 + 966)) ]=v225;end elseif (v225<v116[v224 + 1 + 0 ]) then v110=v118[3];else v116[v224 + (8 -5) ]=v225;end break;end if (v223==0) then v224=v118[2];v225=v116[v224];v223=1;end end elseif (v119==61) then local v284=0;local v285;while true do if (0==v284) then v285=v118[2];v116[v285]=v116[v285](v21(v116,v285 + 1 ,v118[3]));break;end end else local v286=0;local v287;while true do if (v286==0) then v287=v118[2];v116[v287](v116[v287 + 1 ]);break;end end end elseif (v119<=64) then if (v119>63) then v116[v118[2]]={};else do return v116[v118[1819 -(1703 + 114) ]]();end end elseif (v119<=65) then v116[v118[2]][v118[3]]=v116[v118[4]];elseif (v119==66) then if v116[v118[2]] then v110=v110 + 1 ;else v110=v118[3];end else do return;end end elseif (v119<=72) then if (v119<=(89 -20)) then if (v119>(111 -43)) then v116[v118[2]][v116[v118[8 -5 ]]]=v118[4];else v116[v118[1 + 1 ]]={};end elseif (v119<=70) then local v233=v118[2];local v234=v116[v233];local v235=v116[v233 + 2 ];if (v235>0) then if (v234>v116[v233 + 1 ]) then v110=v118[3];else v116[v233 + 3 ]=v234;end elseif (v234<v116[v233 + (2 -1) ]) then v110=v118[3];else v116[v233 + 3 ]=v234;end elseif (v119>71) then local v288=0;local v289;local v290;while true do if (1==v288) then v116[v289 + 1 ]=v290;v116[v289]=v290[v118[4]];break;end if (v288==0) then v289=v118[2];v290=v116[v118[3]];v288=1;end end else v116[v118[2]]=v116[v118[17 -(9 + 5) ]]%v116[v118[4]] ;end elseif (v119<=74) then if (v119==73) then local v236=0;local v237;local v238;local v239;local v240;while true do if (v236==1) then v111=(v239 + v237) -(1188 -(1069 + 118)) ;v240=0;v236=2;end if (v236==0) then v237=v118[2];v238,v239=v109(v116[v237](v21(v116,v237 + 1 ,v118[3])));v236=1;end if (v236==2) then for v368=v237,v111 do local v369=0;while true do if (v369==0) then v240=v240 + 1 ;v116[v368]=v238[v240];break;end end end break;end end else for v243=v118[2],v118[3] do v116[v243]=nil;end end elseif (v119<=75) then local v241=0;local v242;while true do if (v241==0) then v242=v118[2];v116[v242]=v116[v242](v21(v116,v242 + 1 ,v111));break;end end elseif (v119>(171 -95)) then for v327=v118[3 -1 ],v118[3] do v116[v327]=nil;end elseif (v116[v118[2]]==v118[4]) then v110=v110 + 1 ;else v110=v118[3];end v110=v110 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.15) ~  Much Love, Ferib 

]]--

